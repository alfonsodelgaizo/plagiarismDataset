import chars2vec
import sklearn.decomposition
import matplotlib.pyplot as plt

# Load Inutition Engineering pretrained model
# Models names: 'eng_50', 'eng_100', 'eng_150' 'eng_200', 'eng_300'
from sklearn.cluster import KMeans

c2v_model = chars2vec.load_model('eng_100')

words = ['p-8111-20p-4-417-20p-35-200-24-5-2-222p3-8111-2-4','p000-3002000-400-35-20-20p-52','1p1-2-1-1-1-110311-2-3-445-200-1-1-1-113-1-1-15-500-2-2-1-3150212-2-1-422-20212-2-11-8340p',
'p-1p3-2-1-1-2100-12-1-1-1-310-112214-2-13-2-52212-112-2-4-1-25-13-2-1-1-2100-12-1-1-1-31','52p1-1-20-112-52p-410-2-10-221-1-2p-512-2-20221-1-2021-1-12435-2-3-2-5521-1-20-112-52p-410-2-10-221-1-2p-512-2-20221-1-2021-1-12435-2-2-3p',
         '22p1225-2-3-2-5p05-2-1127-2-511p-9221225-2-3-2-5p122-2-2-1-1-3-5210p-11221-1-2-2-13-2p-1111-58-1-2-2-1p-4221225-2-3-2-5p122-2-2-1-1-3-5210p',
         '30-743-330-2-10-44-2-24-2p002-4-101p5040-2-2-33-1-22p012-7225030-1-2-44-2-24030-1-2-4040-2-24-29-4-5-2-130-37-2-20-2-35-2-10-2-310',
         '30p0-3300-30-2p002p1040-2-2-1p0122030-1-20-2p-335-1-2-20-2-32p','p2-2-5-35-11-5352-2-5220p-4p0p5-834-2-50p035-834-2-40p0-1-2-1-11-3220300-3-115-3-2-1-1',
         '-1-2-22-2-7220032-442-47-2p-808-834-2-50035-834-2-40-11p9000-2-1037-10342','p-110-1-2-22-220-2-2-11-110-1-2-277000-1-2-22-220-2-2-22-220-2-1-27p3-110-1-2-22-220-2-2-11-110-1-2-29',
         'p5-11-11-110-1-2-22-22-220-2-2-11-101-1-2-270p25-22-22-220-2-1-22-22-220-2-222-2-220-42p05-11-11-110-1-2-22-22-220-20-2-11-11-1-2-270',
         'p30-20-10-221-63p30-10-20-222-53p30-10-2021-33-10p500080-10-20-20-1-730090-20-20-1-2-2-332050-20-10-2-2-24-20p2p08-10-20-20-1-73p09-20-20-1-2-2-31p-321-3-20p',
         'p-1212-20-1-200-27p-129-20-20-10-22p-422141p4p-122p-422122'
         ]





# Create word embeddings
word_embeddings = c2v_model.vectorize_words(words)
print(word_embeddings)

#kmeans = KMeans(n_clusters=2, random_state=0).fit(word_embeddings)
#print(kmeans)

# Project embeddings on plane using the PCA
projection_2d = sklearn.decomposition.PCA(n_components=2).fit_transform(word_embeddings)

# Draw words on plane
f = plt.figure(figsize=(8, 6))

for j in range(len(projection_2d)):
    plt.scatter(projection_2d[j, 0], projection_2d[j, 1],
                marker=('$' + 'O' + '$'),
                s=10 * len(words[j]), label=j,
                facecolors='green' if words[j]
                           in ['p-8111-20p-4-417-20p-35-200-24-5-2-222p3-8111-2-4','p000-3002000-400-35-20-20p-52','1p1-2-1-1-1-110311-2-3-445-200-1-1-1-113-1-1-15-500-2-2-1-3150212-2-1-422-20212-2-11-8340p', 'p-1212-20-1-200-27p-129-20-20-10-22p-422141p4p-122p-422122', 'Understanding'] else 'black'),


    print(projection_2d[j,0])
    print(projection_2d[j, 1])
    print("\n")
    plt.xlim(-3,3)
    plt.ylim(-3,3)

plt.show()